{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","statsItem","label","quantity","followers","views","likes","defaultProps","Statistics","title","statistics","statList","map","id","percentage","item","style","backgroundColor","Math","floor","random","toString","FriendListItem","isOnline","statusIsOnline","statusIsOffline","width","FriendList","friends","friendList","prototype","PropTypes","arrayOf","shape","string","isRequired","bool","TransactionHistory","items","type","currency","amount","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,YAAc,6BAA6B,MAAQ,uBAAuB,UAAY,2BAA2B,MAAQ,uBAAuB,SAAW,4B,iBCA9QD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,OAAS,2BAA2B,eAAiB,mCAAmC,gBAAkB,oCAAoC,KAAO,2B,gBCAnPD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,SAAW,6BAA6B,KAAO,yBAAyB,WAAa,iC,6PCArLD,EAAOC,QAAU,CAAC,mBAAqB,iD,o8FCIjCC,EAAU,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC9C,OACE,sBAAKC,UAAWC,IAAOC,QAAvB,UACE,sBAAKF,UAAWC,IAAOE,YAAvB,UACE,qBAAKH,UAAWC,IAAOH,OAAQM,IAAKN,EAAQO,IAAI,kHAChD,mBAAGL,UAAWC,IAAON,KAArB,SAA4BA,IAC5B,oBAAGK,UAAU,MAAb,cAAqBJ,KACrB,mBAAGI,UAAU,WAAb,SAAyBH,OAG3B,qBAAIG,UAAWC,IAAOF,MAAtB,UACE,qBAAIC,UAAWC,IAAOK,UAAtB,UACE,sBAAMN,UAAWC,IAAOM,MAAxB,uBACA,sBAAMP,UAAWC,IAAOO,SAAxB,SAAmCT,EAAMU,eAE3C,qBAAIT,UAAWC,IAAOK,UAAtB,UACE,sBAAMN,UAAWC,IAAOM,MAAxB,mBACA,sBAAMP,UAAWC,IAAOO,SAAxB,SAAmCT,EAAMW,WAE3C,qBAAIV,UAAWC,IAAOK,UAAtB,UACE,sBAAMN,UAAWC,IAAOM,MAAxB,mBACA,sBAAMP,UAAWC,IAAOO,SAAxB,SAAmCT,EAAMY,kBAOnDjB,EAAQkB,aAAe,CACrBd,OAAQ,kEAWKJ,Q,uBCrCTmB,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOf,EAAY,EAAZA,MAC3B,OACE,0BAASC,UAAWC,IAAOc,WAA3B,UACGD,GAAS,oBAAId,UAAWC,IAAOa,MAAtB,SAA8BA,IAExC,oBAAId,UAAWC,IAAOe,SAAtB,SACGjB,EAAMkB,KAAI,gBAAGC,EAAH,EAAGA,GAAIX,EAAP,EAAOA,MAAOY,EAAd,EAAcA,WAAd,OACT,qBACEnB,UAAWC,IAAOmB,KAClBC,MAAO,CAAEC,gBAZZ,IAAMC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,KAUnD,UAKE,sBAAM1B,UAAWC,IAAOM,MAAxB,SAAgCA,IAChC,uBAAMP,UAAWC,IAAOkB,WAAxB,UAAqCA,EAArC,SAHKD,YAWjBL,EAAWD,aAAe,CACxBE,MAAO,IAcMD,Q,wCCrBAc,EApBQ,SAAC,GAAgC,IAA9B7B,EAA6B,EAA7BA,OAAQH,EAAqB,EAArBA,KAAMiC,EAAe,EAAfA,SACtC,OACE,qBAAI5B,UAAWC,IAAOmB,KAAtB,WACgB,IAAbQ,EACC,sBAAM5B,UAAWC,IAAO4B,iBAExB,sBAAM7B,UAAWC,IAAO6B,kBAE1B,qBAAK9B,UAAWC,IAAOH,OAAQM,IAAKN,EAAQO,IAAKV,EAAMoC,MAAO,KAC9D,mBAAG/B,UAAWC,IAAON,KAArB,SAA4BA,QCP5BqC,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,oBAAIjC,UAAWC,IAAOiC,WAAtB,SACGD,EAAQhB,KAAI,gBAAGC,EAAH,EAAGA,GAAIpB,EAAP,EAAOA,OAAQH,EAAf,EAAeA,KAAMiC,EAArB,EAAqBA,SAArB,OACX,cAAC,EAAD,CAEE9B,OAAQA,EACRH,KAAMA,EACNiC,SAAUA,GAHLV,SAUfc,EAAWG,UAAY,CACrBF,QAASG,IAAUC,QACjBD,IAAUE,MAAM,CACdpB,GAAIkB,IAAUG,OAAOC,WACrB1C,OAAQsC,IAAUG,OAAOC,WACzB7C,KAAMyC,IAAUG,OAAOC,WACvBZ,SAAUQ,IAAUK,KAAKD,eAKhBR,Q,wBCMAU,EAlCY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACE,wBAAO3C,UAAU,sBAAjB,UACE,gCACE,+BACE,oBAAIA,UAAWC,IAAOa,MAAtB,kBACA,oBAAId,UAAWC,IAAOa,MAAtB,oBACA,oBAAId,UAAWC,IAAOa,MAAtB,2BAGJ,gCACG6B,EAAM1B,KAAI,gBAAGC,EAAH,EAAGA,GAAI0B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,OAAvB,OACT,+BACE,6BAAKF,IACL,6BAAKE,IACL,6BAAKD,MAHE3B,Y,QCYJ6B,MAjBf,WACE,OACE,sBAAK/C,UAAU,MAAf,UACE,cAAC,EAAD,CACEL,KAAMqD,EAAKrD,KACXC,IAAKoD,EAAKpD,IACVC,SAAUmD,EAAKnD,SACfC,OAAQkD,EAAKlD,OACbC,MAAOiD,EAAKjD,QAEd,cAAC,EAAD,CAAYe,MAAM,eAAef,MAAOkD,IACxC,cAAC,EAAD,CAAYhB,QAASA,IACrB,cAAC,EAAD,CAAoBU,MAAOO,Q,MCjBjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2075ef8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1tWCz\",\"avatar\":\"Profile_avatar__jZBK7\",\"name\":\"Profile_name__3f9Cr\",\"description\":\"Profile_description__W0AWq\",\"stats\":\"Profile_stats__3TogP\",\"statsItem\":\"Profile_statsItem__36xKT\",\"label\":\"Profile_label__3T2-E\",\"quantity\":\"Profile_quantity__RAcRD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__aPYPB\",\"item\":\"FriendList_item__384T1\",\"avatar\":\"FriendList_avatar__2gnFK\",\"statusIsOnline\":\"FriendList_statusIsOnline__H_s0I\",\"statusIsOffline\":\"FriendList_statusIsOffline__3mnAq\",\"name\":\"FriendList_name__2Zthg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1qehx\",\"title\":\"Statistics_title__1HVGA\",\"statList\":\"Statistics_statList__1Oh7U\",\"item\":\"Statistics_item__2EP_1\",\"percentage\":\"Statistics_percentage__1rJEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3m9v1\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// eslint-disable-next-line no-unused-vars\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img className={styles.avatar} src={avatar} alt=\"Аватар пользователя\" />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className=\"tag\">@{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul className={styles.stats}>\r\n        <li className={styles.statsItem}>\r\n          <span className={styles.label}>Followers</span>\r\n          <span className={styles.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li className={styles.statsItem}>\r\n          <span className={styles.label}>Views</span>\r\n          <span className={styles.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li className={styles.statsItem}>\r\n          <span className={styles.label}>Likes</span>\r\n          <span className={styles.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.defaultProps = {\r\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg',\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.objectOf(PropTypes.number).isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst randomColor = () => {\r\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n};\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={styles.statistics}>\r\n      {title && <h2 className={styles.title}>{title}</h2>}\r\n\r\n      <ul className={styles.statList}>\r\n        {stats.map(({ id, label, percentage }) => (\r\n          <li\r\n            className={styles.item}\r\n            style={{ backgroundColor: randomColor() }}\r\n            key={id}\r\n          >\r\n            <span className={styles.label}>{label}</span>\r\n            <span className={styles.percentage}>{percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      {isOnline === true ? (\r\n        <span className={styles.statusIsOnline}></span>\r\n      ) : (\r\n        <span className={styles.statusIsOffline}></span>\r\n      )}\r\n      <img className={styles.avatar} src={avatar} alt={name} width={48} />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={styles.friendList}>\r\n      {friends.map(({ id, avatar, name, isOnline }) => (\r\n        <FriendListItem\r\n          key={id}\r\n          avatar={avatar}\r\n          name={name}\r\n          isOnline={isOnline}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.prototype = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th className={styles.title}>Type</th>\r\n          <th className={styles.title}>Amount</th>\r\n          <th className={styles.title}>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map(({ id, type, currency, amount }) => (\r\n          <tr key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport Profile from './components/Profile/Profile';\r\nimport user from './user.json';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport statisticalData from './statistical-data.json';\r\nimport FriendList from './components/FriendList/FriendList';\r\nimport friends from './friends.json';\r\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\r\nimport transactions from './transactions.json';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}